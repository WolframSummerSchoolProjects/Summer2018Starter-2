(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    104343,       2494]
NotebookOptionsPosition[     99327,       2421]
NotebookOutlinePosition[     99704,       2437]
CellTagsIndexPosition[     99661,       2434]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"MNIST", " ", "Data", " ", "fetch", " "}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.7395617607210855`*^9, 
  3.7395617659792604`*^9}},ExpressionUUID->"4a199865-ad68-48b2-81f8-\
86651ddafa89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prepareData", "[", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tx", ",", " ", "tt", ",", " ", "ty", ",", "txT", ",", " ", "ttT", ",", 
       " ", "tyT", ",", " ", "i", ",", " ", "training", ",", " ", "testing"}],
       "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"training", " ", "=", " ", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"ExampleData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], 
          ",", "\"\<TrainingData\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"testing", " ", "=", " ", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"ExampleData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<MachineLearning\>\"", ",", " ", "\"\<MNIST\>\""}], 
           "}"}], ",", " ", "\"\<TestData\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"txT", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"ImageData", ",", " ", 
           RowBox[{"testing", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", " ", "1"}], "]"}], "]"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"10000", ",", " ", "784"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ttT", " ", "=", " ", 
       RowBox[{"testing", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", " ", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tyT", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"10000", ",", " ", "10"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", "\[LessEqual]", "10000"}], ",", " ", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"tyT", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", 
             RowBox[{"1", "+", 
              RowBox[{"ttT", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], "]"}], " ", "=", 
          " ", "1"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"ImageData", ",", " ", 
           RowBox[{"training", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", " ", "1"}], "]"}], "]"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"60000", ",", " ", "784"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tt", "  ", "=", " ", 
       RowBox[{"training", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", " ", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ty", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"60000", ",", " ", "10"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", "\[LessEqual]", "60000"}], ",", " ", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ty", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", 
             RowBox[{"1", "+", 
              RowBox[{"tt", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], "]"}], " ", "=", 
          " ", "1"}], ";"}]}], "]"}], ";", " ", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"tx", ",", " ", "ty", ",", " ", "txT", ",", " ", "tyT"}], 
        "}"}], "]"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "input", ",", " ", "target", ",", " ", "testinp", ",", " ", "testtar"}], 
    "}"}], " ", "=", " ", 
   RowBox[{"prepareData", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7395617677082987`*^9, 3.7395617699307814`*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"529ea0e3-52f7-42db-8042-f3e86c514a8f"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Xavier", " ", "Initialization", " ", "of", " ", "network", " "}], 
  "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.739561781963962*^9, 
  3.7395617819659567`*^9}},ExpressionUUID->"48868ed5-26c5-4f8b-96a7-\
b27fd0a1a145"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"initializeWeights", "[", 
    RowBox[{
    "hiddennodes1_", ",", " ", "hiddennodes2_", ",", " ", "outputnodes_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mininet", ",", " ", "netinit", ",", " ", "w0", ",", " ", "w1", ",", 
       " ", "w2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mininet", " ", "=", " ", 
       RowBox[{"NetChain", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", "hiddennodes1", "]"}], ",", " ", 
           "Ramp", ",", 
           RowBox[{"LinearLayer", "[", "hiddennodes2", "]"}], ",", " ", 
           "Ramp", ",", " ", 
           RowBox[{"LinearLayer", "[", "outputnodes", "]"}], ",", " ", 
           "LogisticSigmoid"}], "}"}], ",", " ", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", "784"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"netinit", " ", "=", " ", 
       RowBox[{"NetInitialize", "[", 
        RowBox[{"mininet", ",", " ", 
         RowBox[{"Method", " ", "\[Rule]", 
          RowBox[{"{", "\"\<Xavier\>\"", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w0", " ", "=", " ", 
       RowBox[{"Transpose", "@", 
        RowBox[{
         RowBox[{"NetExtract", "[", 
          RowBox[{"netinit", ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", " ", "\"\<Weights\>\""}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w1", " ", "=", " ", 
       RowBox[{"Transpose", "@", 
        RowBox[{
         RowBox[{"NetExtract", "[", 
          RowBox[{"netinit", ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", " ", "\"\<Weights\>\""}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w2", " ", "=", " ", 
       RowBox[{"Transpose", "@", 
        RowBox[{
         RowBox[{"NetExtract", "[", 
          RowBox[{"netinit", ",", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", " ", "\"\<Weights\>\""}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "5", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", " ", "w1", ",", " ", "w2"}], "}"}], "]"}], ";"}]}],
     "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[223]:=",ExpressionUUID->"a7d24f0e-bf08-4162-809b-f7d4b2ad4eb3"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Define", " ", "network", " ", "variables"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.739561787772089*^9, 
  3.7395617877750673`*^9}},ExpressionUUID->"51044e44-a945-4edf-b266-\
3587b70a19d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"learningrate", " ", "=", " ", "0.0003"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hiddennodes1", " ", "=", " ", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hiddennodes2", " ", "=", " ", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputnodes", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"batchsize", " ", "=", " ", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterations", " ", "=", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{"60000", "/", "batchsize"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epochs", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b1", " ", "=", " ", "0.9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b2", " ", "=", " ", "0.999"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsilon", " ", "=", " ", "0.00000001"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputdim", "  ", "=", " ", "784"}], ";"}]}], "Input",
 CellChangeTimes->{{3.739565612420392*^9, 3.7395656140133944`*^9}, {
  3.73956711748967*^9, 3.7395671254374027`*^9}, {3.7396389249101477`*^9, 
  3.739638927205014*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"dc1c30b2-a0d7-468c-8efe-2cbccefe6d17"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Binarization", " ", "functions"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.739561826627942*^9, 
  3.7395618309775496`*^9}},ExpressionUUID->"f95bcc4f-6bfe-464a-a552-\
a4e43ce86171"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bGradForward", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Return", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"Flatten", "[", "x", "]"}], "]"}], "]"}], "*", 
     RowBox[{"Sign", "[", "x", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bForward", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Return", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"Flatten", "[", "x", "]"}], "]"}], "]"}], "*", 
     RowBox[{"Sign", "[", "x", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bBackward", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Return", "[", 
    RowBox[{"Clip", "[", 
     RowBox[{"x", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7395618323377304`*^9, 3.7395618540661335`*^9}, {
  3.73956188930412*^9, 3.7395619082766542`*^9}, {3.739561960447143*^9, 
  3.7395619785341015`*^9}, {3.7395620336076946`*^9, 3.739562042142571*^9}, {
  3.7395621821157913`*^9, 3.739562212240314*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"2b04c139-2f94-48b8-8d61-34d9b95dd5aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"bForward", "[", 
   RowBox[{"bForward", "[", "k", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"bBackward", "@", "k"}], "]"}]}], "Input",
 CellChangeTimes->{{3.73956221459525*^9, 3.739562267032261*^9}, {
  3.7395623936666355`*^9, 3.7395624086265697`*^9}, {3.7395650396950006`*^9, 
  3.739565051160205*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"96a91b3d-cbf7-437a-8ff9-c72ba8eb071f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.7388207232026572`", "0.7388207232026572`", "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}], "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}]},
     {
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}]},
     {"0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}]},
     {
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}], "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}]},
     {"0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], 
      RowBox[{"-", "0.7388207232026572`"}], "0.7388207232026572`", 
      RowBox[{"-", "0.7388207232026572`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7395622299331093`*^9, 3.739562233698399*^9}, 
   3.739562267338441*^9, {3.739562394591077*^9, 3.739562408983615*^9}, {
   3.7395650257531652`*^9, 3.739565054514078*^9}, 3.7395659168070574`*^9, 
   3.739638942614799*^9},
 CellLabel->
  "Out[261]//MatrixForm=",ExpressionUUID->"4f1cd137-2318-4844-aa2c-\
3561eae3e713"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.0832885481141736`", "0.19909734521753134`", "0.36182750745256875`", 
      RowBox[{"-", "0.47787555846322394`"}], "0.5062360555084089`", "0.`"},
     {"0.`", 
      RowBox[{"-", "0.6969168402947977`"}], 
      RowBox[{"-", "0.1278328295241001`"}], "0.5356134554564902`", 
      RowBox[{"-", "0.1558364038031532`"}], 
      RowBox[{"-", "0.4962120946121015`"}]},
     {"0.3514850519996148`", "0.`", 
      RowBox[{"-", "0.970228683162023`"}], 
      RowBox[{"-", "0.375509999621847`"}], "0.7757160676220674`", "0.`"},
     {
      RowBox[{"-", "0.7933137382756923`"}], 
      RowBox[{"-", "0.06774841145441067`"}], "0.5338733807850728`", "0.`", 
      "0.8433097375754836`", "0.`"},
     {"0.684809118910085`", "0.`", "0.`", 
      RowBox[{"-", "0.046662494371083954`"}], "0.8710401065439799`", 
      RowBox[{"-", "0.019833067918767655`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7395622299331093`*^9, 3.739562233698399*^9}, 
   3.739562267338441*^9, {3.739562394591077*^9, 3.739562408983615*^9}, {
   3.7395650257531652`*^9, 3.739565054514078*^9}, 3.7395659168070574`*^9, 
   3.7396389426237555`*^9},
 CellLabel->
  "Out[262]//MatrixForm=",ExpressionUUID->"f8cbcad7-760f-492f-8109-\
c6be0bfd48df"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Derivative", " ", "functions"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.739561793934884*^9, 
  3.7395617939369063`*^9}},ExpressionUUID->"870bd94f-dc36-421d-9319-\
812fabbde2e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigmDeriv", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Return", "[", 
    RowBox[{"x", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rampDeriv", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Return", "[", 
    RowBox[{"UnitStep", "[", "x", "]"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[263]:=",ExpressionUUID->"1c58304f-276a-4fff-a464-3fb29f6917c0"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Layer", " ", "evaluator", " ", "function"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.7395618014661584`*^9, 
  3.7395618014681544`*^9}},ExpressionUUID->"1df6e341-2d38-4c91-826a-\
3c1d1eea106e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"layerEval", "[", 
    RowBox[{"x_", ",", " ", "layer_Association"}], "]"}], ":=", 
   RowBox[{"layerEval", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"Lookup", "[", 
      RowBox[{"layer", ",", " ", "\"\<LayerType\>\""}], "]"}], ",", " ", 
     RowBox[{"Lookup", "[", 
      RowBox[{"layer", ",", "\"\<Parameters\>\""}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"layerEval", "[", 
    RowBox[{"x_", ",", " ", "\"\<Sigmoid\>\"", ",", " ", "param_"}], "]"}], ":=",
    " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "x"}], "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"layerEval", "[", 
    RowBox[{"x_", ",", " ", "\"\<Ramp\>\"", ",", " ", "param_"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{
    RowBox[{"Abs", "[", "x", "]"}], "*", 
    RowBox[{"UnitStep", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"layerEval", "[", " ", 
    RowBox[{"x_", ",", " ", "\"\<LinearLayer\>\"", ",", " ", "param_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"param", "[", "\"\<Weights\>\"", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"layerEval", "[", " ", 
    RowBox[{"x_", ",", " ", "\"\<BinLayer\>\"", ",", " ", "param_"}], "]"}], ":=",
    " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"bForward", "[", "x", "]"}], ",", " ", 
     RowBox[{"bForward", "[", 
      RowBox[{"param", "[", "\"\<Weights\>\"", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"layerEval", "[", 
    RowBox[{"x_", ",", " ", "\"\<BinarizeLayer\>\"", ",", " ", "param_"}], 
    "]"}], ":=", " ", 
   RowBox[{"bForward", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"netEvaluate", "[", 
    RowBox[{"net_", ",", " ", "x_", ",", " ", "\"\<Training\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"FoldList", "[", 
    RowBox[{"layerEval", ",", " ", "x", ",", " ", "net"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"netEvaluate", "[", 
    RowBox[{"net_", ",", " ", "x_", ",", " ", "\"\<Test\>\""}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Fold", "[", 
    RowBox[{"layerEval", ",", " ", "x", ",", " ", "net"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.739561809908105*^9, 3.7395618154083767`*^9}, {
   3.7395623342328377`*^9, 3.7395623869812956`*^9}, 3.739562722525852*^9},
 CellLabel->
  "In[265]:=",ExpressionUUID->"eaece362-9924-4902-ad27-cb64d3b2e085"],

Cell[BoxData[
 RowBox[{"Test", " ", "network", " ", "unrolling"}]], "Input",
 CellChangeTimes->{{3.7395651673457117`*^9, 
  3.739565170036276*^9}},ExpressionUUID->"da419ad2-19a0-47b3-b179-\
9a0e53f16796"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "net", " ", "weights"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"net", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], ",",
          " ", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{"\"\<Weights\>\"", " ", "\[Rule]", " ", "w0"}], "|>"}]}]}],
         "|>"}], ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Ramp\>\""}], "|>"}], ",",
        "\[IndentingNewLine]", " ", 
       RowBox[{"<|", 
        RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<BinarizeLayer\>\""}], 
        "|>"}], ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<BinLayer\>\""}], ",", 
         " ", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{"\"\<Weights\>\"", "\[Rule]", "w1"}], "|>"}]}]}], "|>"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Ramp\>\""}], "|>"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], ",",
          " ", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{"\"\<Weights\>\"", "\[Rule]", "w2"}], "|>"}]}]}], "|>"}], 
       ",", " ", "\[IndentingNewLine]", " ", 
       RowBox[{"<|", 
        RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Sigmoid\>\""}], "|>"}]}],
       "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iteration", " ", "=", " ", "5"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.739565102836887*^9, 3.7395651321725073`*^9}, 
   3.7395662300642824`*^9, {3.739566281546957*^9, 3.7395662842627215`*^9}, 
   3.7395664499434237`*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"2dc1f03b-9776-42d0-af25-a5cb88f80a28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullnet", " ", "=", " ", 
   RowBox[{"netEvaluate", "[", 
    RowBox[{"net", ",", " ", 
     RowBox[{"input", "[", 
      RowBox[{"[", 
       RowBox[{"iteration", ";;", 
        RowBox[{"iteration", "+", "batchsize"}]}], "]"}], "]"}], ",", " ", 
     "\"\<Training\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[275]:=",ExpressionUUID->"b3bf015d-c58c-402b-8f4d-3d8bb0dad5b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"l3Error", " ", "=", " ", 
   RowBox[{
    RowBox[{"fullnet", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", 
    RowBox[{"target", "[", 
     RowBox[{"[", 
      RowBox[{"iteration", ";;", 
       RowBox[{"iteration", "+", "batchsize"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l3Delta", " ", "=", " ", 
   RowBox[{"l3Error", "*", 
    RowBox[{"sigmDeriv", "[", 
     RowBox[{"fullnet", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2Error", " ", "=", " ", 
   RowBox[{"hbBackward", "[", 
    RowBox[{"Dot", "[", 
     RowBox[{"l3Delta", ",", " ", 
      RowBox[{"Transpose", "@", 
       RowBox[{"hbWForward", "[", "w2", "]"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2Delta", " ", "=", " ", 
   RowBox[{"l2Error", "*", 
    RowBox[{"rampDeriv", "[", 
     RowBox[{"fullnet", "[", 
      RowBox[{"[", "6", "]"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l1Error", " ", "=", " ", 
   RowBox[{"hbBackward", "[", 
    RowBox[{"Dot", "[", 
     RowBox[{"l2Delta", ",", " ", 
      RowBox[{"Transpose", "@", 
       RowBox[{"hbWForward", "[", "w1", "]"}]}]}], "]"}], "]"}]}], ";", 
  RowBox[{"l1Delta", " ", "=", " ", 
   RowBox[{"l1Error", "*", 
    RowBox[{"rampDeriv", "[", 
     RowBox[{"fullnet", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[276]:=",ExpressionUUID->"62aa9500-ec2e-49af-8899-6222bf18aff3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l2Delta", "[", 
  RowBox[{"[", 
   RowBox[{";;", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7396389893226175`*^9, 3.7396389981246376`*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"67613d99-03bc-4c6a-b5e4-35048a52d45a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 283, 30267483524308328435, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 283, 30267483524308328435, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 283, 30267483524308328435, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30267483524308328435 === $SessionID, 
   Out[283], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.739638964814188*^9, {3.7396389960721292`*^9, 3.7396389986213446`*^9}},
 CellLabel->
  "Out[283]=",ExpressionUUID->"a9e05fd0-0913-49f9-b882-88a3726714aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "fullnet"}]], "Input",
 CellChangeTimes->{{3.739565135971985*^9, 3.7395651496759014`*^9}, {
  3.739565214148263*^9, 3.7395652661566544`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"94e6e790-6ca4-45ca-8e79-dd56f00a7dd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "17"}], "}"}]], "Output",
 CellChangeTimes->{{3.7395652424706345`*^9, 3.7395652664100184`*^9}, 
   3.739565926114134*^9, 3.739566233816877*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"975d8765-3c8e-4b65-a898-94cb020f18ad"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Back", " ", "Propagation", " ", 
   RowBox[{"algorithm", " ", ":", " ", 
    StyleBox[
     RowBox[{
      StyleBox["EA", "Subtitle",
       FontWeight->"Bold"], "S", 
      StyleBox["Y", "Subtitle",
       FontWeight->"Bold"]}]], " "}]}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.7395624454383483`*^9, 3.7395624454403872`*^9}, {
  3.739565576577035*^9, 3.739565580333019*^9}, {3.7395657068570814`*^9, 
  3.7395657084718647`*^9}},ExpressionUUID->"61c9a279-14aa-4315-be02-\
34ce40644024"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"backProp", "[", 
    RowBox[{
    "fullnet_", ",", " ", "w0_", ",", " ", "w1_", ",", " ", "w2_", ",", " ", 
     "input_", ",", " ", "target_", ",", " ", "l3M_", ",", " ", "l3V_", ",", 
     "  ", "l2M_", ",", " ", "l1M_", ",", " ", "l2V_", ",", " ", "l1V_", " ", 
     ",", " ", "iteration_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l3Error", ",", " ", "l3Delta", ",", " ", "l2Error", ",", " ", 
       "l2Delta", ",", " ", "l1Error", ",", " ", "l1Delta", ",", " ", "g2", 
       ",", " ", "g1", ",", " ", "g0", ",", " ", "l0", ",", " ", "l1", ",", 
       " ", "l2", ",", " ", "l3", ",", " ", "l1MC", ",", " ", "l1VC", ",", 
       " ", "l2MC", ",", " ", "l2VC", ",", " ", "l3MC", ",", " ", "l3VC", ",",
        " ", "l3MT", ",", " ", "l2MT", ",", " ", "l1MT", ",", " ", "l3VT", 
       ",", " ", "l2VT", ",", " ", "l1VT", ",", " ", "w2T", ",", " ", "w1T", 
       ",", " ", "w0T", ",", " ", "w2UDT", ",", "  ", "w1UDT", ",", " ", 
       "w0UDT"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l3MT", " ", "=", " ", "l3M"}], ";", " ", 
      RowBox[{"l3VT", " ", "=", " ", "l3V"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"l2MT", " ", "=", " ", "l2M"}], ";", " ", 
      RowBox[{"l2VT", " ", "=", " ", "l2V"}], ";", "\[IndentingNewLine]", 
      RowBox[{"l1MT", " ", "=", " ", "l1M"}], ";", " ", 
      RowBox[{"l1VT", " ", "=", " ", "l1V"}], ";", "\[IndentingNewLine]", 
      RowBox[{"w2T", " ", "=", " ", "w2"}], ";", " ", 
      RowBox[{"w1T", " ", "=", " ", "w1"}], ";", " ", 
      RowBox[{"w0T", " ", "=", " ", "w0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"l3Error", " ", "=", " ", 
         RowBox[{
          RowBox[{"fullnet", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", "target"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"l3Delta", " ", "=", " ", 
         RowBox[{"l3Error", "*", 
          RowBox[{"sigmDeriv", "[", 
           RowBox[{"fullnet", "[", 
            RowBox[{"[", "9", "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l2Error", " ", "=", " ", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"bGradForward", "[", "l3Delta", "]"}], ",", " ", 
           RowBox[{"Transpose", "@", 
            RowBox[{"bForward", "[", "w2", "]"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l2Delta", " ", "=", " ", 
         RowBox[{"l2Error", "*", 
          RowBox[{"rampDeriv", "[", 
           RowBox[{"fullnet", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l1Error", " ", "=", " ", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"bGradForward", "[", "l2Delta", "]"}], ",", " ", 
           RowBox[{"Transpose", "@", 
            RowBox[{"bForward", "[", "w1", "]"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l1Delta", " ", "=", " ", 
         RowBox[{"l1Error", "*", 
          RowBox[{"rampDeriv", "[", 
           RowBox[{"fullnet", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"g2", " ", "=", " ", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"fullnet", "[", 
             RowBox[{"[", "7", "]"}], "]"}], "]"}], ",", " ", 
           RowBox[{"bGradForward", "[", "l3Delta", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g1", " ", "=", " ", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"fullnet", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", " ", 
           RowBox[{"bGradForward", "[", "l2Delta", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g0", " ", "=", " ", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "input", "]"}], ",", " ", "l1Delta"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"l3MT", " ", "=", " ", 
         RowBox[{
          RowBox[{"l3MT", "*", "b1"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "b1"}], ")"}], "*", "g2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l3VT", " ", "=", " ", 
         RowBox[{
          RowBox[{"l3VT", "*", "b2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "b2"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"g2", "*", "g2"}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l2MT", " ", "=", " ", 
         RowBox[{
          RowBox[{"l2MT", "*", "b1"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "b1"}], ")"}], "*", "g1"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l2VT", " ", "=", " ", 
         RowBox[{
          RowBox[{"l2VT", "*", "b2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "b2"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"g1", "*", "g1"}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l1MT", " ", "=", " ", 
         RowBox[{
          RowBox[{"l1MT", "*", "b1"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "b1"}], ")"}], "*", "g0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"l1VT", " ", "=", " ", 
         RowBox[{
          RowBox[{"l1VT", "*", "b2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "b2"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"g0", "*", "g0"}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"l1MC", " ", "=", " ", 
         RowBox[{"l1MT", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"b1", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
        RowBox[{"l1VC", " ", "=", " ", 
         RowBox[{"l1VT", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"b2", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"l2MC", " ", "=", " ", 
         RowBox[{"l2MT", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"b1", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
        RowBox[{"l2VC", " ", "=", " ", 
         RowBox[{"l2VT", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"b2", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"l3MC", " ", "=", " ", 
         RowBox[{"l3MT", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"b1", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
        RowBox[{"l3VC", " ", "=", " ", 
         RowBox[{"l3VT", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"b2", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"w2UDT", " ", "=", " ", 
         RowBox[{"l3MC", "/", 
          RowBox[{"(", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"l3VC", " ", "+", " ", "epsilon"}], "]"}], ")"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"w1UDT", " ", "=", " ", 
         RowBox[{"l2MC", "/", 
          RowBox[{"(", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"l2VC", " ", "+", " ", "epsilon"}], "]"}], ")"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"w0UDT", " ", "=", " ", 
         RowBox[{"l1MC", "/", 
          RowBox[{"(", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"l1VC", " ", "+", " ", "epsilon"}], "]"}], ")"}]}]}], ";",
         " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"w2T", " ", "-=", " ", 
         RowBox[{"learningrate", "*", "w2UDT"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"w1T", " ", "-=", " ", 
         RowBox[{"learningrate", "*", "w1UDT"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"w0T", " ", "-=", " ", 
         RowBox[{"learningrate", "*", "w0UDT"}]}], ";"}], " ", 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"l3Error", " ", "=", " ", 
       RowBox[{
        RowBox[{"fullnet", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", "target"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l3Delta", " ", "=", " ", 
       RowBox[{"l3Error", "*", 
        RowBox[{"sigmDeriv", "[", 
         RowBox[{"fullnet", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l2Error", " ", "=", 
       RowBox[{"Dot", "[", 
        RowBox[{"l3Delta", ",", " ", 
         RowBox[{"Transpose", "[", "w2", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l2Delta", " ", "=", " ", 
       RowBox[{"l2Error", "*", 
        RowBox[{"rampDeriv", "[", 
         RowBox[{"fullnet", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l1Error", " ", "=", 
       RowBox[{"Dot", "[", 
        RowBox[{"l2Delta", ",", " ", 
         RowBox[{"Transpose", "[", "w1", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l1Delta", " ", "=", " ", 
       RowBox[{"l1Error", "*", 
        RowBox[{"rampDeriv", "[", 
         RowBox[{"fullnet", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g2", " ", "=", " ", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"fullnet", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], ",", " ", "l3Delta"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g1", " ", "=", " ", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"fullnet", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", " ", "l2Delta"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g0", " ", "=", " ", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "input", "]"}], ",", " ", "l1Delta"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l3MT", " ", "=", " ", 
       RowBox[{
        RowBox[{"l3MT", "*", "b1"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "b1"}], ")"}], "*", "g2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l3VT", " ", "=", " ", 
       RowBox[{
        RowBox[{"l3VT", "*", "b2"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "b2"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"g2", "*", "g2"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l2MT", " ", "=", " ", 
       RowBox[{
        RowBox[{"l2MT", "*", "b1"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "b1"}], ")"}], "*", "g1"}]}]}], ";", 
      "\t\t\t\t\t\t", "\[IndentingNewLine]", 
      RowBox[{"l2VT", " ", "=", " ", 
       RowBox[{
        RowBox[{"l2VT", "*", "b2"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "b2"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"g1", "*", "g1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l1MT", " ", "=", " ", 
       RowBox[{
        RowBox[{"l1MT", "*", "b1"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "b1"}], ")"}], "*", "g0"}]}]}], ";", 
      "\t\t\t\t\t\t\t\t\t\t\t\t", "\[IndentingNewLine]", 
      RowBox[{"l1VT", " ", "=", " ", 
       RowBox[{
        RowBox[{"l1VT", "*", "b2"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "b2"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"g0", "*", "g0"}], ")"}]}]}]}], ";", 
      "\t\t\t\t\t\t\t\t\t\t\t\t", "\[IndentingNewLine]", 
      RowBox[{"l1MC", " ", "=", " ", 
       RowBox[{"l1MT", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"b1", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
      RowBox[{"l1VC", " ", "=", " ", 
       RowBox[{"l1VT", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"b2", "^", "iteration"}]}], ")"}]}]}], ";", 
      "\t\t\t\t\t\t\t\t\t\t\t", "\[IndentingNewLine]", 
      RowBox[{"l2MC", " ", "=", " ", 
       RowBox[{"l2MT", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"b1", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
      RowBox[{"l2VC", " ", "=", " ", 
       RowBox[{"l2VT", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"b2", "^", "iteration"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l3MC", " ", "=", " ", 
       RowBox[{"l3MT", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"b1", "^", "iteration"}]}], ")"}]}]}], ";", " ", 
      RowBox[{"l3VC", " ", "=", " ", 
       RowBox[{"l3VT", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"b2", "^", "iteration"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w2UDT", " ", "=", " ", 
       RowBox[{"l3MC", "/", 
        RowBox[{"(", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"l3VC", " ", "+", " ", "epsilon"}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w1UDT", " ", "=", 
       RowBox[{"l2MC", "/", 
        RowBox[{"(", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"l2VC", " ", "+", " ", "epsilon"}], "]"}], ")"}]}]}], ";", 
      " ", 
      RowBox[{"w0UDT", " ", "=", " ", 
       RowBox[{"l1MC", "/", 
        RowBox[{"(", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"l1VC", " ", "+", " ", "epsilon"}], "]"}], ")"}]}]}], ";", 
      "\t\t\t\t\t\t\t\t\t\t\t", "\[IndentingNewLine]", 
      RowBox[{"w2T", " ", "-=", " ", 
       RowBox[{"learningrate", "*", "w2UDT"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w1T", " ", "-=", " ", 
       RowBox[{"learningrate", "*", "w1UDT"}]}], ";", 
      "\t\t\t\t\t\t\t\t\t\t\t\t\t", "\[IndentingNewLine]", 
      RowBox[{"w0T", " ", "-=", " ", 
       RowBox[{"learningrate", "*", "w0UDT"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
        "w0T", ",", " ", "w1T", ",", " ", "w2T", ",", " ", "l3MT", ",", " ", 
         "l3VT", ",", " ", "l2MT", ",", " ", "l1MT", ",", " ", "l2VT", ",", 
         " ", "l1VT"}], "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7395624500862284`*^9, 3.739562554732466*^9}, {
  3.739564362084696*^9, 3.7395646830462513`*^9}, {3.7395647383609943`*^9, 
  3.7395648889763565`*^9}, {3.7395649336872797`*^9, 3.73956496497505*^9}, {
  3.7395653560975943`*^9, 3.7395653586654463`*^9}, {3.7395654534098997`*^9, 
  3.739565453684158*^9}, {3.739565494539566*^9, 3.739565497811923*^9}, {
  3.739565756940077*^9, 3.7395657770062895`*^9}, {3.739566260619569*^9, 
  3.7395662607851515`*^9}, {3.7395664231632805`*^9, 3.7395664304688787`*^9}, {
  3.739566514354723*^9, 3.739566514491357*^9}, {3.739567146258696*^9, 
  3.7395671463464675`*^9}, {3.7395674325457816`*^9, 3.739567432655471*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"c6adda7b-8a80-4281-beaf-7c3c90b47bdc"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Accuracy", " ", "Testing", " ", "Function"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.739562563352662*^9, 
  3.7395625633546567`*^9}},ExpressionUUID->"a41b5cfc-5af9-496c-8ed5-\
4384788014ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"test", "[", 
    RowBox[{
    "net_", ",", " ", "input_", ",", " ", "target_", ",", " ", "testnum_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Return", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"netEvaluate", "[", 
          RowBox[{"net", ",", " ", 
           RowBox[{"input", "[", 
            RowBox[{"[", "testnum", "]"}], "]"}], ",", " ", "\"\<Test\>\""}], 
          "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{"netEvaluate", "[", 
           RowBox[{"net", ",", " ", 
            RowBox[{"input", "[", 
             RowBox[{"[", "testnum", "]"}], "]"}], ",", " ", "\"\<Test\>\""}],
            "]"}], "]"}]}], "]"}], " ", "-", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"target", "[", 
          RowBox[{"[", "testnum", "]"}], "]"}], ",", " ", "1"}], "]"}], " ", 
       "-", " ", "1"}]}], "}"}], "]"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"accTest", "[", 
    RowBox[{
    "net_", ",", " ", "input_", ",", " ", "target_", ",", " ", "numTest_"}], 
    "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"y", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"x", "=", "1"}], ",", " ", 
        RowBox[{"x", "\[LessEqual]", "numTest"}], ",", " ", 
        RowBox[{"x", "++"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"netEvaluate", "[", 
              RowBox[{"net", ",", " ", 
               RowBox[{"input", "[", 
                RowBox[{"[", "x", "]"}], "]"}], ",", " ", "\"\<Test\>\""}], 
              "]"}], ",", " ", 
             RowBox[{"Max", "[", 
              RowBox[{"netEvaluate", "[", 
               RowBox[{"net", ",", " ", 
                RowBox[{"input", "[", 
                 RowBox[{"[", "x", "]"}], "]"}], ",", " ", "\"\<Test\>\""}], 
               "]"}], "]"}]}], "]"}], "==", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"target", "[", 
              RowBox[{"[", "x", "]"}], "]"}], ",", " ", "1"}], "]"}]}], " ", 
          ",", 
          RowBox[{"y", "++"}]}], "]"}]}], "]"}], ";", " ", 
      RowBox[{"Return", "[", 
       RowBox[{"y", "/", "numTest"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.7395625622936754`*^9},
 CellLabel->
  "In[364]:=",ExpressionUUID->"bd95f968-bfba-4ab0-ba08-0476279d678a"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Network", " ", "run", " ", "function", " "}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.739562565606951*^9, 3.739562567423723*^9}, 
   3.7395669131228967`*^9},ExpressionUUID->"218e8cea-5e9c-4471-b73e-\
c9c738235ee3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"runNet", "[", 
   RowBox[{
   "input_", ",", " ", "target_", ",", " ", "testinp_", ",", " ", 
    "testtar_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "iteration", ",", " ", "fullnet", ",", " ", "w0", ",", " ", "w1", ",", 
      " ", "w2", ",", "l3M", ",", " ", "l3V", ",", " ", "l2M", ",", " ", 
      "l1M", ",", " ", "l2V", ",", " ", "l1V", ",", "\[IndentingNewLine]", 
      "l3Error", ",", " ", "l3Delta", ",", "l2Error", ",", " ", "l2Delta", 
      ",", " ", "l1Error", ",", " ", "l1Delta", ",", " ", "g1", ",", " ", 
      "g0", ",", " ", "l0", ",", " ", "l1", ",", " ", "l2", ",", "l3", ",", 
      " ", "l1MC", ",", " ", "l1VC", ",", " ", "l2MC", ",", " ", "l2VC", ",", 
      " ", "l3MC", ",", " ", "l3VC", ",", " ", "w2UDT", ",", " ", "w1UDT", 
      ",", " ", "w0UDT", ",", " ", "epoch"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w0", ",", " ", "w1", ",", " ", "w2"}], "}"}], " ", "=", " ", 
      RowBox[{"initializeWeights", "[", 
       RowBox[{"hiddennodes1", ",", " ", "hiddennodes2", ",", " ", "10"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epoch", " ", "=", " ", "epochs"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"l3M", " ", "=", " ", "0"}], ";", " ", 
     RowBox[{"l3V", " ", "=", " ", "0"}], ";", 
     RowBox[{"l2M", " ", "=", " ", "0"}], ";", " ", 
     RowBox[{"l1M", " ", "=", " ", "0"}], ";", " ", 
     RowBox[{"l2V", " ", "=", " ", "0"}], ";", " ", 
     RowBox[{"l1V", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "Iterator", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iteration", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"iteration", "\[LessEqual]", " ", "iterations"}], ",", " ", 
       RowBox[{"iteration", "+=", "batchsize"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "If", " ", "iteration", " ", "ends", " ", "and", " ", "epoch", " ", 
          "isnt", " ", "0"}], ",", " ", 
         RowBox[{"reset", " ", "iteration"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{"iteration", " ", "\[GreaterEqual]", " ", 
             RowBox[{"iterations", " ", "-", " ", "32"}]}], ",", " ", 
            RowBox[{"epoch", "\[GreaterEqual]", "1"}]}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"iteration", "=", "1"}], ";", " ", 
           RowBox[{"epoch", "-=", "1"}], ";", " ", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<epoch \>\"", "epoch"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Training acc\>\"", " ", 
             StyleBox[
              RowBox[{"N", "[", 
               RowBox[{"accTest", "[", 
                RowBox[{
                "net", ",", " ", "input", ",", " ", "target", ",", " ", 
                 "600"}], "]"}], "]"}],
              FontWeight->"Bold"]}], 
            StyleBox["]",
             FontWeight->"Bold"]}], 
           StyleBox[";",
            FontWeight->"Bold"], 
           StyleBox["\[IndentingNewLine]",
            FontWeight->"Bold"], 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Test acc\>\"", " ", 
             RowBox[{"N", "[", 
              RowBox[{"accTest", "[", 
               RowBox[{
               "net", ",", " ", "testinp", ",", " ", "testtar", ",", " ", 
                "100"}], "]"}], "]"}]}], "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Redefine", " ", "net", " ", "weights"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Define", " ", "net", " ", "weights"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"net", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], 
             ",", " ", 
             RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{"\"\<Weights\>\"", " ", "\[Rule]", " ", "w0"}], 
               "|>"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Ramp\>\""}], "|>"}], 
           ",", "\[IndentingNewLine]", " ", 
           RowBox[{"<|", 
            RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<BinarizeLayer\>\""}],
             "|>"}], ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<BinLayer\>\""}], 
             ",", " ", 
             RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{"\"\<Weights\>\"", "\[Rule]", "w1"}], "|>"}]}]}], 
            "|>"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Ramp\>\""}], "|>"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], 
             ",", " ", 
             RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{"\"\<Weights\>\"", "\[Rule]", "w2"}], "|>"}]}]}], 
            "|>"}], ",", " ", "\[IndentingNewLine]", " ", 
           RowBox[{"<|", 
            RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Sigmoid\>\""}], 
            "|>"}]}], "\[IndentingNewLine]", "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Evaluate", " ", "the", " ", "net"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"fullnet", " ", "=", " ", 
         RowBox[{"netEvaluate", "[", 
          RowBox[{"net", ",", " ", 
           RowBox[{"input", "[", 
            RowBox[{"[", 
             RowBox[{"iteration", ";;", 
              RowBox[{"iteration", "+", "batchsize"}]}], "]"}], "]"}], ",", 
           " ", "\"\<Training\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Back", " ", "prop"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "w0", ",", " ", "w1", ",", "w2", ",", " ", "l3M", ",", " ", "l3V", 
           ",", " ", "l2M", ",", " ", "l1M", ",", " ", "l2V", ",", " ", 
           "l1V"}], "}"}], " ", "=", " ", 
         RowBox[{"backProp", "[", 
          RowBox[{
          "fullnet", ",", " ", "w0", ",", " ", "w1", ",", " ", "w2", ",", " ", 
           RowBox[{"input", "[", 
            RowBox[{"[", 
             RowBox[{"iteration", ";;", 
              RowBox[{"iteration", "+", "batchsize"}]}], "]"}], "]"}], ",", 
           " ", 
           RowBox[{"target", "[", 
            RowBox[{"[", 
             RowBox[{"iteration", ";;", 
              RowBox[{"iteration", "+", "batchsize"}]}], "]"}], "]"}], ",", 
           " ", "l3M", ",", " ", "l3V", ",", "  ", "l2M", ",", " ", "l1M", 
           ",", " ", "l2V", ",", " ", "l1V", ",", " ", "iteration"}], "]"}]}],
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"w0", ",", " ", "w1", ",", " ", "w2"}], "}"}], "]"}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7395625861297393`*^9, 3.73956263052021*^9}, {
   3.739562661362663*^9, 3.7395626648009043`*^9}, {3.739562698886861*^9, 
   3.7395628175642104`*^9}, {3.7395628580197864`*^9, 
   3.7395628830116644`*^9}, {3.739565287707942*^9, 3.7395653136146135`*^9}, {
   3.7395653694401464`*^9, 3.7395653712669187`*^9}, {3.739566127683996*^9, 
   3.7395661623634005`*^9}, {3.7395662011704745`*^9, 3.7395662056562295`*^9}, 
   3.7395662929895897`*^9, {3.7395671603460045`*^9, 3.7395671616884146`*^9}, 
   3.7395674270584335`*^9},
 CellLabel->
  "In[401]:=",ExpressionUUID->"36468c58-a035-49a6-a4de-3bb47bc777bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w0", ",", " ", "w1", ",", " ", "w2"}], "}"}], " ", "=", " ", 
   RowBox[{"runNet", "[", 
    RowBox[{
    "input", ",", " ", "target", ",", " ", "testinp", ",", " ", "testtar"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395661238579464`*^9, 3.73956612412424*^9}, {
  3.739566171510495*^9, 3.739566195923069*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"05937a87-855a-463a-a9dc-a1521677c725"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"19", " ", "\<\"epoch \"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.7395674626930933`*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"3ef8d204-0714-4a85-9efb-2f1157d26fab"],

Cell[BoxData[
 RowBox[{"0.07666666666666666`", " ", "\<\"Training acc\"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.739567470258851*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"d51118c4-1124-492f-9928-977225a09d03"],

Cell[BoxData[
 RowBox[{"0.11`", " ", "\<\"Test acc\"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.739567471546407*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"8319ff7e-3297-43b7-b9db-411314b82b65"],

Cell[BoxData[
 RowBox[{"18", " ", "\<\"epoch \"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.7395674935279737`*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"c899b5e2-ee0c-4964-92be-adce3fb185c9"],

Cell[BoxData[
 RowBox[{"0.09`", " ", "\<\"Training acc\"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.7395675009152107`*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"ae86ff0c-aa81-4586-9f04-4c9be5f16f4b"],

Cell[BoxData[
 RowBox[{"0.11`", " ", "\<\"Test acc\"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.7395675021977787`*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"e0b6e510-13b0-4490-8536-0566730a0800"],

Cell[BoxData[
 RowBox[{"17", " ", "\<\"epoch \"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.7395675252830153`*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"cff3d8fd-94a5-4165-ac97-bfdf0f946b8d"],

Cell[BoxData[
 RowBox[{"0.08666666666666667`", " ", "\<\"Training acc\"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.739567532955488*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"9958b2e0-535c-4d4e-95ee-777fa67cd02b"],

Cell[BoxData[
 RowBox[{"0.11`", " ", "\<\"Test acc\"\>"}]], "Print",
 CellChangeTimes->{3.7395672222094936`*^9, 3.739567534204147*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"f1f05499-f060-4fd8-b5bc-8821f7c91ce1"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7395671852673297`*^9, 3.739567425235309*^9, 
  3.7395675445953455`*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"ca5dffac-2ea5-42fd-89f2-e285779d0ca6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mininet", " ", "=", " ", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "hiddennodes1", "]"}], ",", " ", "Ramp", 
      ",", 
      RowBox[{"LinearLayer", "[", "hiddennodes2", "]"}], ",", " ", "Ramp", 
      ",", " ", 
      RowBox[{"LinearLayer", "[", "outputnodes", "]"}], ",", " ", 
      "LogisticSigmoid"}], "}"}], ",", " ", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "784"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73956691999152*^9, 3.7395669271117334`*^9}, {
  3.7395690842267723`*^9, 3.7395690855339384`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"bec6f0a9-ff80-47a5-a541-52db5953acb2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 784}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{2048, 256}, NeuralNetworks`RealT],
                     "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2048}, "$OutputSize" -> 2048, 
                    "$InputSize" -> 256, "$InputDimensions" -> {256}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 2048}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 2048, "$InputDimensions" -> {2048}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart = {"Nodes", "1"}, 
                   NeuralNetworks`Private`NetChain`part = {"Nodes", "1"}, 
                   NeuralNetworks`Private`NetChain`selected = 
                   Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 784}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {256}, "$OutputSize" -> 256, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]]]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {243., {133., 139.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7395690916934595`*^9, 3.7395690954115114`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"31cb4171-b91a-4b56-9063-276449f45675"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Net", " ", "accuracy", " ", "testing"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.7395660841464415`*^9, 
  3.7395660841484365`*^9}},ExpressionUUID->"9dbd8f18-9102-4c39-aea9-\
a2e36684a3a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], ",", 
       RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{"\"\<Weights\>\"", "\[Rule]", "w0"}], "|>"}]}]}], "|>"}], 
     ",", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Ramp\>\""}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], ",", 
       RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{"\"\<Weights\>\"", "\[Rule]", "w1"}], "|>"}]}]}], "|>"}], 
     ",", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Ramp\>\""}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<LinearLayer\>\""}], ",", 
       RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{"\"\<Weights\>\"", "\[Rule]", "w2"}], "|>"}]}]}], "|>"}], 
     ",", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<LayerType\>\"", "\[Rule]", "\"\<Sigmoid\>\""}], "|>"}]}], 
    "}"}]}], ";", 
  StyleBox[
   RowBox[{"N", "[", 
    RowBox[{"accTest", "[", 
     RowBox[{
     "net", ",", " ", "input", ",", " ", "target", ",", " ", "60000"}], "]"}],
     "]"}],
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"accTest", "[", 
   RowBox[{
   "net", ",", " ", "testinp", ",", " ", "testtar", ",", " ", "10000"}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.739566091021245*^9, 
  3.739566092125001*^9}},ExpressionUUID->"d7bbe0fc-c30e-43da-8619-\
4fd09b6b5050"],

Cell[BoxData[
 StyleBox[
  RowBox[{"MNIST", " ", "weight", " ", "saver"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.7395660953908577`*^9, 
  3.7395660953938513`*^9}},ExpressionUUID->"3851b0a8-0e1e-4b57-9afc-\
915f6b250ded"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<MNISTweightsAggressive.dat\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{"w0", ",", " ", "w1", ",", " ", "w2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73956610191183*^9, 
  3.73956610347484*^9}},ExpressionUUID->"9a6737a3-d6c1-4391-af9b-\
7a12864944c3"],

Cell[BoxData[
 StyleBox[
  RowBox[{"MNIST", " ", "weight", " ", "importer"}], "Subtitle",
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.73956610744728*^9, 
  3.7395661074493027`*^9}},ExpressionUUID->"419071fb-458a-46f0-b8e7-\
d939f9948d24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"w0", ",", " ", "w1", ",", " ", "w2"}], "}"}], " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<MNISTweights2.dat\>\"", "]"}]}]], "Input",Expres\
sionUUID->"d8445121-6850-4f62-bf3e-55693350d400"]
},
WindowSize->{958, 1028},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"ReverseColor.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 252, 6, 40, "Input",ExpressionUUID->"4a199865-ad68-48b2-81f8-86651ddafa89"],
Cell[816, 28, 4329, 113, 225, "Input",ExpressionUUID->"529ea0e3-52f7-42db-8042-f3e86c514a8f"],
Cell[5148, 143, 277, 7, 40, "Input",ExpressionUUID->"48868ed5-26c5-4f8b-96a7-b27fd0a1a145"],
Cell[5428, 152, 2498, 62, 153, "Input",ExpressionUUID->"a7d24f0e-bf08-4162-809b-f7d4b2ad4eb3"],
Cell[7929, 216, 253, 6, 40, "Input",ExpressionUUID->"51044e44-a945-4edf-b266-3587b70a19d6"],
Cell[8185, 224, 1298, 32, 207, "Input",ExpressionUUID->"dc1c30b2-a0d7-468c-8efe-2cbccefe6d17"],
Cell[9486, 258, 243, 6, 40, "Input",ExpressionUUID->"f95bcc4f-6bfe-464a-a552-a4e43ce86171"],
Cell[9732, 266, 1363, 35, 63, "Input",ExpressionUUID->"2b04c139-2f94-48b8-8d61-34d9b95dd5aa"],
Cell[CellGroupData[{
Cell[11120, 305, 736, 18, 63, "Input",ExpressionUUID->"96a91b3d-cbf7-437a-8ff9-c72ba8eb071f"],
Cell[11859, 325, 2033, 46, 100, "Output",ExpressionUUID->"4f1cd137-2318-4844-aa2c-3561eae3e713"],
Cell[13895, 373, 1743, 39, 100, "Output",ExpressionUUID->"f8cbcad7-760f-492f-8109-c6be0bfd48df"]
}, Open  ]],
Cell[15653, 415, 241, 6, 40, "Input",ExpressionUUID->"870bd94f-dc36-421d-9319-812fabbde2e2"],
Cell[15897, 423, 501, 14, 45, "Input",ExpressionUUID->"1c58304f-276a-4fff-a464-3fb29f6917c0"],
Cell[16401, 439, 255, 6, 40, "Input",ExpressionUUID->"1df6e341-2d38-4c91-826a-3c1d1eea106e"],
Cell[16659, 447, 2679, 75, 153, "Input",ExpressionUUID->"eaece362-9924-4902-ad27-cb64d3b2e085"],
Cell[19341, 524, 204, 4, 26, "Input",ExpressionUUID->"da419ad2-19a0-47b3-b179-9a0e53f16796"],
Cell[19548, 530, 2133, 52, 189, "Input",ExpressionUUID->"2dc1f03b-9776-42d0-af25-a5cb88f80a28"],
Cell[21684, 584, 417, 11, 26, "Input",ExpressionUUID->"b3bf015d-c58c-402b-8f4d-3d8bb0dad5b8"],
Cell[22104, 597, 1610, 47, 117, "Input",ExpressionUUID->"62aa9500-ec2e-49af-8899-6222bf18aff3"],
Cell[CellGroupData[{
Cell[23739, 648, 261, 6, 26, "Input",ExpressionUUID->"67613d99-03bc-4c6a-b5e4-35048a52d45a"],
Cell[24003, 656, 7517, 201, 88, "Output",ExpressionUUID->"a9e05fd0-0913-49f9-b882-88a3726714aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31557, 862, 266, 5, 26, "Input",ExpressionUUID->"94e6e790-6ca4-45ca-8e79-dd56f00a7dd1"],
Cell[31826, 869, 275, 6, 30, "Output",ExpressionUUID->"975d8765-3c8e-4b65-a898-94cb020f18ad"]
}, Open  ]],
Cell[32116, 878, 549, 14, 40, "Input",ExpressionUUID->"61c9a279-14aa-4315-be02-34ce40644024"],
Cell[32668, 894, 15700, 377, 1233, "Input",ExpressionUUID->"c6adda7b-8a80-4281-beaf-7c3c90b47bdc"],
Cell[48371, 1273, 254, 6, 40, "Input",ExpressionUUID->"a41b5cfc-5af9-496c-8ed5-4384788014ad"],
Cell[48628, 1281, 2725, 73, 153, "Input",ExpressionUUID->"bd95f968-bfba-4ab0-ba08-0476279d678a"],
Cell[51356, 1356, 277, 6, 40, "Input",ExpressionUUID->"218e8cea-5e9c-4471-b73e-c9c738235ee3"],
Cell[51636, 1364, 8281, 180, 639, "Input",ExpressionUUID->"36468c58-a035-49a6-a4de-3bb47bc777bd"],
Cell[CellGroupData[{
Cell[59942, 1548, 473, 12, 26, "Input",ExpressionUUID->"05937a87-855a-463a-a9dc-a1521677c725"],
Cell[CellGroupData[{
Cell[60440, 1564, 237, 5, 21, "Print",ExpressionUUID->"3ef8d204-0714-4a85-9efb-2f1157d26fab"],
Cell[60680, 1571, 259, 5, 21, "Print",ExpressionUUID->"d51118c4-1124-492f-9928-977225a09d03"],
Cell[60942, 1578, 240, 5, 21, "Print",ExpressionUUID->"8319ff7e-3297-43b7-b9db-411314b82b65"],
Cell[61185, 1585, 237, 5, 21, "Print",ExpressionUUID->"c899b5e2-ee0c-4964-92be-adce3fb185c9"],
Cell[61425, 1592, 246, 5, 21, "Print",ExpressionUUID->"ae86ff0c-aa81-4586-9f04-4c9be5f16f4b"],
Cell[61674, 1599, 242, 5, 21, "Print",ExpressionUUID->"e0b6e510-13b0-4490-8536-0566730a0800"],
Cell[61919, 1606, 237, 5, 21, "Print",ExpressionUUID->"cff3d8fd-94a5-4165-ac97-bfdf0f946b8d"],
Cell[62159, 1613, 259, 5, 21, "Print",ExpressionUUID->"9958b2e0-535c-4d4e-95ee-777fa67cd02b"],
Cell[62421, 1620, 240, 5, 21, "Print",ExpressionUUID->"f1f05499-f060-4fd8-b5bc-8821f7c91ce1"]
}, Open  ]],
Cell[62676, 1628, 211, 4, 30, "Output",ExpressionUUID->"ca5dffac-2ea5-42fd-89f2-e285779d0ca6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62924, 1637, 683, 15, 45, "Input",ExpressionUUID->"bec6f0a9-ff80-47a5-a541-52db5953acb2"],
Cell[63610, 1654, 32649, 675, 311, "Output",ExpressionUUID->"31cb4171-b91a-4b56-9063-276449f45675"]
}, Open  ]],
Cell[96274, 2332, 251, 6, 40, "Input",ExpressionUUID->"9dbd8f18-9102-4c39-aea9-a2e36684a3a7"],
Cell[96528, 2340, 1726, 47, 99, "Input",ExpressionUUID->"d7bbe0fc-c30e-43da-8619-4fd09b6b5050"],
Cell[98257, 2389, 249, 6, 40, "Input",ExpressionUUID->"3851b0a8-0e1e-4b57-9afc-915f6b250ded"],
Cell[98509, 2397, 316, 7, 26, "Input",ExpressionUUID->"9a6737a3-d6c1-4391-af9b-7a12864944c3"],
Cell[98828, 2406, 249, 6, 40, "Input",ExpressionUUID->"419071fb-458a-46f0-b8e7-d939f9948d24"],
Cell[99080, 2414, 243, 5, 26, "Input",ExpressionUUID->"d8445121-6850-4f62-bf3e-55693350d400"]
}
]
*)

